{
  "name": "www-main",
  "version": "3.2.9",
  "private": true,
  "dependencies": {
    "@fortawesome/fontawesome-free": "^6.5.1",
    "highlight.js": "^11.9.0",
    "katex": "^0.16.9",
    "uikit": "^3.17.11",
    "www-covidcast": "https://github.com/cmu-delphi/www-covidcast/releases/download/v3.2.9/www-covidcast-3.2.9.tgz",
    "www-covidcast-classic": "https://github.com/cmu-delphi/www-covidcast-classic/releases/download/v2.6.7/www-covidcast-classic-2.6.7.tgz",
    "www-epivis": "https://github.com/cmu-delphi/www-epivis/releases/download/v2.0.3/www-epivis-2.0.3.tgz"
  },
  "devDependencies": {
    "hugo-bin": "^0.117.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.0",
    "prettier-plugin-go-template": "^0.0.15",
    "rimraf": "^5.0.5",
    "shx": "^0.3.4"
  },
  "files": [
    "public"
  ],
  "scripts": {
    "clean": "rimraf \"*.tgz\" public",
    "copy_fonts": "shx cp -r \"node_modules/katex/dist/fonts/*\" themes/delphi/static/css/fonts/",
    "copy_covidcast": "shx rm -rf \"static/covidcast/*\" && shx cp \"node_modules/www-covidcast/public/**/*.{js,txt,css,map}\" static/covidcast/",
    "copy_covidcast_classic": "shx rm -rf \"static/covidcast/classic/*\" && shx mkdir -p static/covidcast/classic/ && shx cp \"node_modules/www-covidcast-classic/public/**/*.{js,txt,css,map}\" static/covidcast/classic/",
    "copy_epivis": "shx rm -rf \"static/epivis/*\" && shx cp \"node_modules/www-epivis/public/**/*.{js,txt,css,map}\" static/epivis/",
    "postinstall": "npm run copy_fonts && npm run copy_covidcast && npm run copy_epivis && npm run copy_covidcast_classic",
    "build:blog": "Rscript -e \"blogdown::build_site(local=FALSE, run_hugo=FALSE, build_rmd='md5sum')\"",
    "prebuild": "npm run clean",
    "build": "hugo --gc --minify",
    "start": "hugo server -D",
    "start:blog": "Rscript -e \"blogdown::serve_site(port=1313, browser=FALSE)\"",
    "format": "prettier *.* \"(.vscode|content|data|themes)/**\" --write",
    "lint": "prettier *.* \"(.vscode|content|data|themes)/**\" --check",
    "image": "docker build -t www-main:latest --file ./devops/Dockerfile .",
    "prepare": "husky install",
    "prepack": "npm run build"
  },
  "hugo-bin": {
    "buildTags": "extended"
  },
  "lint-staged": {
    "*.{js,scss,css,yaml,md,html,json,yml}": "prettier --write"
  }
}
